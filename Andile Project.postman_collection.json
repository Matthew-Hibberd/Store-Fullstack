{
	"info": {
		"_postman_id": "95fc2020-d6b9-4aa6-b578-be018c023c0f",
		"name": "Andile Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16226184"
	},
	"item": [
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product search after creation should ensure the created product exists\", function () {",
									"    pm.sendRequest({",
									"        url: 'localhost:5000/products',",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'json',",
									"            'raw': JSON.stringify({",
									"                \"ids\": []",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        var requestData = JSON.parse(pm.request.body.raw);",
									"        var products = res.json().products;",
									"",
									"        var filtered = products.filter((product) => product.name === requestData.name);",
									"",
									"        pm.expect(filtered).to.have.lengthOf.at.least(1);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some Product 5\",\n    \"description\": \"Some description\",\n    \"price\": 123.4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/product",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains an object with the key 'product'\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('product').that.is.an('object');",
									"});",
									"",
									"pm.test(\"Each field in the 'product' object has a value\", function () {",
									"    var product = pm.response.json().product;",
									"    for (var key in product) {",
									"        pm.expect(product[key]).to.exist;",
									"        pm.expect(product[key]).not.to.be.equals(null);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/product/6503febdbb69879c3e293bfe",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"product",
								"6503febdbb69879c3e293bfe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product search after deletion should ensure the deleted product no longer exists\", function () {",
									"    pm.sendRequest({",
									"        url: 'localhost:5000/products',",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'json',",
									"            'raw': JSON.stringify({",
									"                \"ids\": []",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        var requestData = JSON.parse(pm.request.body.raw);",
									"        var deletedProductIds = requestData.ids;",
									"        var products = res.json().products;",
									"",
									"        products.forEach((product) => {",
									"            pm.expect(deletedProductIds).to.not.include(product.id);",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\"6503ff51e84c5c33c2e85e86\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/remove-products",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"remove-products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"At least one object exists in the list of products\", function () {",
									"    pm.expect(pm.response.json().products).to.be.an('array').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"pm.test(\"Each product is fully populated\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    responseData.products.forEach((product) => {",
									"        for (var key in product) {",
									"            pm.expect(product[key]).to.exist;",
									"            pm.expect(product[key]).not.to.be.equals(null)",
									"        }",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/products",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search for the updated product using the id parameter and ensure the fields specified in the request body have been updated\", function () {",
									"    var requestData = JSON.parse(pm.request.body.raw);",
									"    var responseData = pm.response.json();",
									"",
									"    pm.sendRequest({",
									"        url: 'localhost:5000/product/' + responseData.product.id,",
									"        method: 'GET',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        }",
									"    }, function (err, response) {",
									"        pm.expect(err).to.be.null; // Check if there is no error",
									"        var responseBody = response.json();",
									"        var updatedProduct = responseBody.product;",
									"",
									"        Object.keys(requestData).forEach((field) => {",
									"            pm.expect(updatedProduct[field]).to.equal(requestData[field]);",
									"        })",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"name\": \"Some New Name For Product\",\n    \"description\": \"Some Other Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/product/6503febdbb69879c3e293bfe",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"product",
								"6503febdbb69879c3e293bfe"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product search after creation should ensure the created customer exists\", function () {",
									"    pm.sendRequest({",
									"        url: 'localhost:5000/customers',",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'json',",
									"            'raw': JSON.stringify({",
									"                \"ids\": []",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        var requestData = JSON.parse(pm.request.body.raw);",
									"        var customers = res.json().customers;",
									"",
									"        var filtered = customers.filter((customer) => customer.email === customer.email);",
									"",
									"        pm.expect(filtered).to.have.lengthOf.at.least(1);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Customer 2\",\n    \"email\": \"customer02@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/customer",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Product search after deletion should ensure the deleted customer does not exist\", function () {",
									"    pm.sendRequest({",
									"        url: 'localhost:5000/customers',",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'json',",
									"            raw: JSON.stringify({",
									"                \"ids\": []",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        pm.expect(err).to.be.null;",
									"",
									"        const currentUrl = pm.request.url.toString();",
									"        const regex = /\\/customer\\/(\\w+)$/;",
									"        const match = currentUrl.match(regex);",
									"",
									"        if (match && match.length === 2) {",
									"            pm.variables.set(\"customerId\", match[1]);",
									"        }",
									"",
									"        pm.expect(pm.variables.get(\"customerId\")).not.to.be.empty;",
									"        var customers = res.json().customers;",
									"        var filtered = customers.filter((customer) => customer.id === pm.variables.get(\"customerId\"));",
									"",
									"        pm.expect(filtered).to.have.lengthOf(0);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:5000/customer/65040972ecdf2b36985e23e7",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"customer",
								"65040972ecdf2b36985e23e7"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": \"65040954ecdf2b36985e23e6\",\n    \"paid\": false,\n    \"products\": [\"6503febdbb69879c3e293bfe\", \"6503fface84c5c33c2e85e87\"],\n    \"total\": 246.8\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/order",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search for the updated order using the id parameter and ensure the fields specified in the request body have been updated\", function () {",
									"    const currentUrl = pm.request.url.toString();",
									"    const regex = /\\/order\\/(\\w+)$/;",
									"    const match = currentUrl.match(regex);",
									"",
									"    if (match && match.length === 2) {",
									"        pm.variables.set(\"orderId\", match[1]);",
									"    }",
									"",
									"    pm.expect(pm.variables.get(\"orderId\")).not.to.be.empty;",
									"",
									"    pm.sendRequest({",
									"        url: 'http://localhost:5000/order/' + pm.variables.get(\"orderId\"),",
									"        method: 'GET',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        }",
									"    }, function (err, response) {",
									"        pm.expect(err).to.be.null;",
									"",
									"        var requestData = JSON.parse(pm.request.body.raw);",
									"        var responseData = response.json();",
									"        var updatedOrder = responseData.order;",
									"",
									"        Object.keys(requestData).forEach((field) => {",
									"            pm.expect(updatedOrder[field]).to.equal(requestData[field]);",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paid\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/order/65040b031c34b59df04dc7cc",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"order",
								"65040b031c34b59df04dc7cc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains an object with the key 'order'\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('order');",
									"});",
									"",
									"pm.test(\"Each field in the 'order' object has a value\", function () {",
									"    var order = pm.response.json().order;",
									"    for (var key in order) {",
									"        pm.expect(order[key]).to.exist;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/order/65040b121c34b59df04dc7cd",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"order",
								"65040b121c34b59df04dc7cd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"At least one object exists in the list of orders\", function () {",
									"    pm.expect(pm.response.json().orders).to.be.an('array').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"pm.test(\"Each order is fully populated\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    responseData.orders.forEach((order) => {",
									"        for (var key in order) {",
									"            pm.expect(order[key]).to.exist;",
									"            pm.expect(order[key]).not.to.be.equals(null)",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"ids\": [\"65040b121c34b59df04dc7cd\"],\n    \"customerId\": \"65040954ecdf2b36985e23e6\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/orders",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}